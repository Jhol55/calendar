services:
  app:
    build:
      context: .
      target: runner
      dockerfile: Dockerfile
    ports:
      - '3001:3000'
    container_name: app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:123456@postgres:5432/calendar
      - SECRET_KEY=supersecret123
      - NEXT_PUBLIC_API_URL=https://teste21-calendar.awmygg.easypanel.host/api
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: sh -c "npx prisma migrate deploy && npm start"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: worker
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:123456@postgres:5432/calendar
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: npm run worker

  postgres:
    container_name: db
    image: pgvector/pgvector:pg17
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=calendar
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgweb:
    container_name: pgweb
    image: sosedoff/pgweb
    restart: always
    environment:
      - DATABASE_URL=postgresql://postgres:123456@postgres:5432/calendar?sslmode=disable # REMOVE SSL DISABLE
    ports:
      - '8081:8081'
    depends_on:
      - postgres

  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  uazapi:
    build:
      context: ./uazapi
      dockerfile: Dockerfile
    container_name: uazapi
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=uazapi
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  redis_data:

