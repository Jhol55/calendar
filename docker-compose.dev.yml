networks:
  api-net:
    driver: bridge

services:
  postgres:
    container_name: db
    image: pgvector/pgvector:pg17
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=wazzy
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "maintenance_work_mem=64MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "work_mem=2621kB"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "max_wal_size=4GB"
      - "-c"
      - "statement_timeout=30000"
      - "-c"
      - "idle_in_transaction_session_timeout=60000"
      - "-c"
      - "tcp_keepalives_idle=60"
      - "-c"
      - "tcp_keepalives_interval=10"
      - "-c"
      - "tcp_keepalives_count=6"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - api-net

  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - api-net

  pgweb:
    container_name: pgweb
    image: sosedoff/pgweb
    restart: always
    environment:
      - PGWEB_DATABASE_URL=postgresql://postgres:123456@postgres:5432/wazzy?sslmode=disable
    ports:
      - '8081:8081'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - api-net

  # ==================== JUDGE0 SERVICES ====================
  
  judge0-server:
    container_name: judge0-server
    image: judge0/judge0:1.13.0
    env_file: judge0.conf
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    ports:
      - "2358:2358"
    privileged: true
    restart: unless-stopped
    networks:
      - api-net
    depends_on:
      judge0-db:
        condition: service_healthy
      judge0-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2358/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: 100M

  judge0-worker:
    container_name: judge0-worker
    image: judge0/judge0:1.13.0
    command: ["./scripts/workers"]
    env_file: judge0.conf
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    privileged: true
    restart: unless-stopped
    networks:
      - api-net
    depends_on:
      judge0-db:
        condition: service_healthy
      judge0-redis:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: 100M

  judge0-db:
    container_name: judge0-db
    image: postgres:16.2-alpine
    env_file: judge0.conf
    # Porta NÃO exposta externamente (só acesso interno via rede Docker)
    volumes:
      - judge0_data:/var/lib/postgresql/data/
    restart: unless-stopped
    networks:
      - api-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U judge0"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: 100M

  judge0-redis:
    container_name: judge0-redis
    image: redis:7.2.4-alpine
    command:
      - redis-server
      - --appendonly
      - "no"
      - --requirepass
      - "YourSecureRedisPasswordHere123!"
    env_file: judge0.conf
    # Porta NÃO exposta externamente (só acesso interno via rede Docker)
    restart: unless-stopped
    networks:
      - api-net
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "YourSecureRedisPasswordHere123!", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: 100M

volumes:
  redis_data:
  judge0_data:
