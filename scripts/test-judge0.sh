#!/bin/bash

echo "üß™ Testando configura√ß√£o do Judge0..."
echo ""

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Verificar se os containers est√£o rodando
echo "üì¶ Verificando containers..."
docker ps --filter name=judge0 --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo ""

# Verificar logs do Redis
echo "üìä Logs do Redis (√∫ltimas 10 linhas):"
docker logs judge0-redis --tail 10 2>&1
echo ""

# Verificar logs do Worker
echo "üë∑ Logs do Worker (√∫ltimas 15 linhas):"
docker logs judge0-worker --tail 15 2>&1
echo ""

# Testar conex√£o Redis
echo "üîå Testando conex√£o Redis..."
if docker exec judge0-redis redis-cli --no-auth-warning -a "YourSecureRedisPasswordHere123!" ping > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Redis respondendo${NC}"
else
    echo -e "${RED}‚ùå Redis n√£o est√° respondendo${NC}"
fi
echo ""

# Testar API do Judge0
echo "üåê Testando API do Judge0..."
if curl -s http://localhost:2358/about > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API Judge0 respondendo${NC}"
    echo ""
    echo "üìÑ Informa√ß√µes do Judge0:"
    curl -s http://localhost:2358/about | jq '.' 2>/dev/null || curl -s http://localhost:2358/about
else
    echo -e "${RED}‚ùå API Judge0 n√£o est√° respondendo${NC}"
fi
echo ""

# Testar submiss√£o de c√≥digo simples
echo "üöÄ Testando execu√ß√£o de c√≥digo JavaScript..."
RESPONSE=$(curl -s -X POST http://localhost:2358/submissions?wait=true \
  -H "Content-Type: application/json" \
  -d '{
    "source_code": "console.log(\"Hello from Judge0!\")",
    "language_id": 63,
    "stdin": ""
  }')

if echo "$RESPONSE" | grep -q "Hello from Judge0"; then
    echo -e "${GREEN}‚úÖ C√≥digo executado com sucesso!${NC}"
    echo ""
    echo "üì§ Output:"
    echo "$RESPONSE" | jq -r '.stdout' 2>/dev/null || echo "$RESPONSE"
else
    echo -e "${RED}‚ùå Erro ao executar c√≥digo${NC}"
    echo ""
    echo "Response:"
    echo "$RESPONSE" | jq '.' 2>/dev/null || echo "$RESPONSE"
fi

echo ""
echo "‚ú® Teste conclu√≠do!"

