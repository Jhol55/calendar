name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io

jobs:
  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-preview
          tags: |
            type=ref,event=pr
      
      - name: Build and push preview image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}-preview:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}-preview:buildcache,mode=max
          target: runner
      
      # Opcional: Deploy automÃ¡tico de preview
      # - name: Deploy Preview Environment
      #   run: |
      #     # Implemente aqui o deploy do ambiente de preview
      #     # Pode ser no Vercel, Railway, ou qualquer outro serviÃ§o
      #     echo "Preview URL: https://pr-${{ github.event.pull_request.number }}.preview.seu-dominio.com"
      
      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸš€ Preview Build Created
              
              Docker image built successfully!
              
              **Image:** \`${{ steps.meta.outputs.tags }}\`
              
              To test locally:
              \`\`\`bash
              docker pull ${{ steps.meta.outputs.tags }}
              docker run -p 3000:3000 ${{ steps.meta.outputs.tags }}
              \`\`\`
              `
            })

